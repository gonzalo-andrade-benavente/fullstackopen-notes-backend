{"version":3,"sources":["components/Note.js","services/notes.js","components/Notificacion.js","Notes.js","index.js"],"names":["Note","note","toggleImportant","label","important","className","content","onClick","baseUrl","axios","get","then","response","data","newObject","post","id","put","Notification","message","Footer","style","color","fontStyle","fontSize","Notes","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","useEffect","noteService","initialState","notesToShow","filter","n","map","find","changedNote","noteUpdate","onSubmit","e","preventDefault","noteObj","date","Date","toISOString","Math","random","length","noteCreate","concat","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"8JAeeA,EAbF,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,KAAMC,EAAqB,EAArBA,gBAEZC,EAAQF,EAAKG,UAAY,qBAAuB,iBAEtD,OACI,qBAAIC,UAAU,OAAd,UACMJ,EAAKK,QACP,yBAAQC,QAASL,EAAjB,cAAqCC,EAArC,W,gBCLNK,EAAU,aAiBD,EAfA,WAEX,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAa9B,EAVA,SAAAC,GAEX,OADgBL,IAAMM,KAAMP,EAASM,GACtBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQ9B,EALA,SAACG,EAAIF,GAEhB,OADgBL,IAAMQ,IAAN,UAAaT,EAAb,YAAwBQ,GAAMF,GAC/BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCF9BK,EAfM,SAAC,GAAkB,IAAfC,EAAc,EAAdA,QAErB,OAAiB,OAAZA,EACM,KAIP,qBAAKd,UAAU,QAAf,SACMc,KCFRC,EAAS,WAOX,OACI,sBAAKC,MAPW,CAChBC,MAAO,QACPC,UAAW,SACXC,SAAU,IAIV,UACI,uBACA,2GAyGGC,EAnGD,WAEV,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA8BJ,oBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAAwCN,mBAAS,MAAjD,mBAAOO,EAAP,UAmBAC,qBAjBmB,WAUfC,IAEKxB,MAAK,SAAAyB,GACFR,EAAUQ,QAIA,IAEtB,IA+BMC,EAAcN,EAAUJ,EAAQA,EAAMW,QAAO,SAAAC,GAAC,OAAIA,EAAEnC,aAmB1D,OACI,qCACI,uCACA,cAAC,EAAD,CAAce,QAAUc,IACxB,yBAAQ1B,QAAS,kBAAMyB,GAAYD,IAAnC,kBACUA,EAAU,YAAc,SAElC,6BAEQM,EAAYG,KAAI,SAAAD,GAAC,OAAI,cAAC,EAAD,CAAiBtC,KAAMsC,EAAGrC,gBAAiB,kBA1BxD,SAACc,GACrB,IAAMf,EAAO0B,EAAMc,MAAM,SAACF,GAAD,OAAOA,EAAEvB,KAAOA,KACnC0B,EAAW,2BAAQzC,GAAR,IAAcG,WAAYH,EAAKG,YAO3C+B,EACWnB,EAAI0B,GACX/B,MAAM,SAAAgC,GACHf,EAAUD,EAAMa,KAAK,SAAAvC,GAAI,OAAIA,EAAKe,KAAOA,EAAK2B,EAAa1C,SAcWC,CAAgBqC,EAAEvB,MAAxDuB,EAAEvB,SAG1C,uBAAM4B,SA9DE,SAACC,GACbA,EAAEC,iBACF,IAAMC,EAAU,CACZzC,QAASuB,EACTmB,MAAM,IAAIC,MAAOC,YACjB9C,UAAW+C,KAAKC,SAAW,GAC3BpC,GAAIW,EAAM0B,OAAS,GAUnBlB,EACYY,GACPpC,MAAM,SAAA2C,GACH1B,EAASD,EAAM4B,OAAQD,IACvBxB,EAAW,QA0CnB,UACI,uBAAO0B,MAAO3B,EAAS4B,SAtCT,SAACZ,GACvBf,EAAWe,EAAEa,OAAOF,UAsCZ,wBAAQG,KAAK,SAAb,qBAGJ,cAAC,EAAD,QC5GZC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,U","file":"static/js/main.e6531e4e.chunk.js","sourcesContent":["import React from 'react';\n\nconst Note = ({ note, toggleImportant}) => {\n\n    const label = note.important ? 'make not important' : 'make important';\n    \n    return (\n        <li className=\"note\"> \n            { note.content }\n            <button onClick={toggleImportant}> { label } </button>\n        </li>\n    );\n\n}\n\nexport default Note;","import axios from 'axios';\n\n//const baseUrl = 'http://localhost:3001/api/notes'; \n//const baseUrl = 'http://whispering-bastion-67493.herokuapp.com/api/notes';\nconst baseUrl = '/api/notes'; \n\nconst getAll = () => {\n    const request = axios.get(baseUrl);\n    return request.then(response => response.data);\n}\n\nconst create = newObject => {\n    const request = axios.post( baseUrl, newObject);\n    return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject);\n    return request.then(response => response.data)\n}\n\nexport default {\n    getAll,\n    create,\n    update\n}","\nconst Notification = ( { message }) => {\n\n    if ( message === null ) {\n        return null;\n    }\n\n    return(\n        <div className=\"error\">\n            { message }\n        </div>\n    )\n\n\n}\n\nexport default Notification;","import { useEffect, useState } from \"react\";\n\nimport Note from './components/Note';\nimport noteService from './services/notes';\nimport './index.css';\nimport Notification from './components/Notificacion';\n\nconst Footer = () => {\n    const footerStyle = {\n        color: 'green',\n        fontStyle: 'italic',\n        fontSize: 16\n    }\n\n    return(\n        <div style={ footerStyle }>\n            <br />\n            <em>Note app, Department of Computer Science, University of Helsinki 2021</em>\n        </div>\n    )\n}\n\n\nconst Notes = () => {\n\n    const [notes, setNotes] = useState([]);\n    const [newNote, setNewNote] = useState('');\n    const [showAll, setShowAll] = useState(true);\n    const [errorMessage, setErrorMessage] = useState(null);\n\n    const hookEffect = () => {\n        \n        // axios\n        //     .get('http://localhost:3001/notes')\n        //     .then(response => {\n        //         console.log('promise fulfilled')\n        //         setNotes(response.data)\n        //     });\n\n\n        noteService\n            .getAll()\n            .then(initialState => {\n                setNotes( initialState )\n            });\n    };\n\n    useEffect(hookEffect, []);\n\n    const addNote = (e) => {\n        e.preventDefault();\n        const noteObj = {\n            content: newNote,\n            date: new Date().toISOString,\n            important: Math.random() < 0.5,\n            id: notes.length + 1\n        }\n\n\n       /*  axios.post('http://localhost:3001/notes', noteObj)\n            .then(response => {\n                setNotes(notes.concat(response.data));\n                setNewNote('');\n            }); */\n\n            noteService\n                .create(noteObj)\n                .then( noteCreate => {\n                    setNotes(notes.concat( noteCreate ));\n                    setNewNote('');\n                });\n\n    };\n\n    const handleNoteChanged = (e) => {\n        setNewNote(e.target.value);\n    }\n\n    //const notesToShow = showAll ? notes : notes.filter( (n) => { return n.important === true} );\n\n    const notesToShow = showAll ? notes : notes.filter(n => n.important);\n\n    const toggleImportant = (id) => {\n        const note = notes.find( (n) => n.id === id );\n        const changedNote = { ...note, important: !note.important }\n/* \n        axios.put(`http://localhost:3001/notes/${id}`, changedNote)\n             .then( response => {\n                setNotes( notes.map( note => note.id === id ? response.data : note ) )\n             }); */\n        \n             noteService\n                .update(id, changedNote)\n                .then( noteUpdate => {\n                    setNotes( notes.map( note => note.id === id ? noteUpdate : note ) )\n                 });\n        \n    }\n\n    return (\n        <>\n            <h1>Notes</h1>\n            <Notification message={ errorMessage }/>\n            <button onClick={() => setShowAll(!showAll)}>\n                show {showAll ? 'important' : 'all'}\n            </button>\n            <ul>\n                {\n                    notesToShow.map(n => <Note key={n.id} note={n} toggleImportant={() => toggleImportant(n.id) }/>)\n                }\n            </ul>\n            <form onSubmit={addNote}>\n                <input value={newNote} onChange={handleNoteChanged} />\n                <button type=\"submit\">save</button>\n            </form>\n\n            <Footer />\n        </>\n    )\n\n}\n\nexport default Notes;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\n//import App from './App';\n\nimport Notes from './Notes';\n\nReactDOM.render(\n    <Notes />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}